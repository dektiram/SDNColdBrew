{"version":3,"sources":["jquery.contextMenu.min.js"],"names":["factory","define","amd","exports","require","jQuery","$","inputLabel","node","id","val","name","menuChildren","items","$children","counter","each","label","item","$node","this","nodeName","toLowerCase","find","length","text","children","first","get","attr","disabled","callback","click","undefined","icon","type","selected","radio","value","options","html","clone","support","htmlMenuitem","window","htmlCommand","eventSelectstart","document","documentElement","ui","widget","cleanData","orig","elems","events","elem","i","_data","remove","triggerHandler","e","$currentTrigger","initialized","$win","namespaces","menus","types","defaults","selector","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","classNames","hover","visible","notSelectable","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","determinePosition","$menu","position","css","my","at","of","offset","collision","top","outerHeight","left","outerWidth","opt","x","y","offsetParentOffset","offsetParent","bottom","scrollTop","height","right","scrollLeft","width","call","positionSubmenu","zIndex","animation","duration","show","hide","noop","activated","hoveract","timer","pageX","pageY","handle","abortevent","preventDefault","stopImmediatePropagation","contextmenu","$this","data","originalEvent","mouseButton","hasClass","build","built","extend","isEmptyObject","console","error","log","Error","$trigger","op","create","showMenu","hasOwnProperty","isFunction","currentTarget","Event","mousedown","is","button","mouseup","removeData","mouseenter","$related","relatedTarget","$document","closest","on","mousemove","setTimeout","off","mouseleave","clearTimeout","layerClick","target","root","fakeClick","$window","triggerAction","elementFromPoint","$layer","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","contextMenu","keyStop","isInput","stopPropagation","key","targetZIndex","getZIndexOfTriggerTarget","style","parentElement","parseInt","keyCode","shiftKey","$selected","blur","prop","parent","$parent","itemdata","k","String","fromCharCode","toUpperCase","accesskeys","prevItem","$s","$prev","prev","last","$round","itemMouseleave","itemMouseenter","$input","focus","nextItem","$next","next","focusInput","contextMenuRoot","blurInput","menuMouseenter","hovering","menuMouseleave","itemClick","contextMenuKey","callbacks","Object","prototype","update","inputClick","hideMenu","force","focusItem","addClass","join","not","removeClass","filter","blurItem","additionalZValue","$t","zin","$tt","Math","max","indexOf","zindex","layer","pos","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","_afterAccesskey","isHtmlName","accesskey","className","$label","ak","aks","t","split","keys","charAt","push","splitAccesskey","matched","match","RegExp","commands","hasTypes","inputs","prependTo","then","processPromises","_icon","substring","body","resize","nested","domMenu","display","getBoundingClientRect","ceil","minWidth","maxWidth","addBack","$item","z-index","opacity","background-color","insertBefore","promise","errorPromise","errorItem","finishPromiseProcess","bind","$menuOffset","winHeight","winScrollTop","menuHeight","overflow-x","overflow-y","fn","operation","$o","context","isPlainObject","o","$context","_hasContext","menu","ns","itemClickEvent","contextMenuItemObj","contextmenu:focus.contextMenu","contextmenu:blur.contextMenu","contextmenu.contextMenu","mouseenter.contextMenu","mouseleave.contextMenu","contextmenu:hide.contextMenu","prevcommand.contextMenu","nextcommand.contextMenu","$visibleMenu","fromMenu","setInputValues","getInputValues","element"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["/**\n * jQuery contextMenu v2.6.3 - Plugin for simple contextMenu handling\n *\n * Version: v2.6.3\n *\n * Authors: Björn Brala (SWIS.nl), Rodney Rehm, Addy Osmani (patches for FF)\n * Web: http://swisnl.github.io/jQuery-contextMenu/\n *\n * Copyright (c) 2011-2018 SWIS BV and contributors\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *\n * Date: 2018-02-20T13:26:15.719Z\n */\n\n// jscs:disable\n/* jshint ignore:start */\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node / CommonJS\n        factory(require('jquery'));\n    } else {\n        // Browser globals.\n        factory(jQuery);\n    }\n})(function ($) {\n\n    'use strict';\n\n    // TODO: -\n    // ARIA stuff: menuitem, menuitemcheckbox und menuitemradio\n    // create <menu> structure if $.support[htmlCommand || htmlMenuitem] and !opt.disableNative\n\n    // determine html5 compatibility\n    $.support.htmlMenuitem = ('HTMLMenuItemElement' in window);\n    $.support.htmlCommand = ('HTMLCommandElement' in window);\n    $.support.eventSelectstart = ('onselectstart' in document.documentElement);\n    /* // should the need arise, test for css user-select\n     $.support.cssUserSelect = (function(){\n     var t = false,\n     e = document.createElement('div');\n\n     $.each('Moz|Webkit|Khtml|O|ms|Icab|'.split('|'), function(i, prefix) {\n     var propCC = prefix + (prefix ? 'U' : 'u') + 'serSelect',\n     prop = (prefix ? ('-' + prefix.toLowerCase() + '-') : '') + 'user-select';\n\n     e.style.cssText = prop + ': text;';\n     if (e.style[propCC] == 'text') {\n     t = true;\n     return false;\n     }\n\n     return true;\n     });\n\n     return t;\n     })();\n     */\n\n\n    if (!$.ui || !$.widget) {\n        // duck punch $.cleanData like jQueryUI does to get that remove event\n        $.cleanData = (function (orig) {\n            return function (elems) {\n                var events, elem, i;\n                for (i = 0; elems[i] != null; i++) {\n                    elem = elems[i];\n                    try {\n                        // Only trigger remove when necessary to save time\n                        events = $._data(elem, 'events');\n                        if (events && events.remove) {\n                            $(elem).triggerHandler('remove');\n                        }\n\n                        // Http://bugs.jquery.com/ticket/8235\n                    } catch (e) {\n                    }\n                }\n                orig(elems);\n            };\n        })($.cleanData);\n    }\n    /* jshint ignore:end */\n    // jscs:enable\n\n    var // currently active contextMenu trigger\n        $currentTrigger = null,\n        // is contextMenu initialized with at least one menu?\n        initialized = false,\n        // window handle\n        $win = $(window),\n        // number of registered menus\n        counter = 0,\n        // mapping selector to namespace\n        namespaces = {},\n        // mapping namespace to options\n        menus = {},\n        // custom command type handlers\n        types = {},\n        // default values\n        defaults = {\n            // selector of contextMenu trigger\n            selector: null,\n            // where to append the menu to\n            appendTo: null,\n            // method to trigger context menu [\"right\", \"left\", \"hover\"]\n            trigger: 'right',\n            // hide menu when mouse leaves trigger / menu elements\n            autoHide: false,\n            // ms to wait before showing a hover-triggered context menu\n            delay: 200,\n            // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n            // as long as the trigger happened on one of the trigger-element's child nodes\n            reposition: true,\n            // Flag denoting if a second trigger should close the menu, as long as \n            // the trigger happened on one of the trigger-element's child nodes.\n            // This overrides the reposition option.\n            hideOnSecondTrigger: false,\n\n            //ability to select submenu\n            selectableSubMenu: false,\n\n            // Default classname configuration to be able avoid conflicts in frameworks\n            classNames: {\n                hover: 'context-menu-hover', // Item hover\n                disabled: 'context-menu-disabled', // Item disabled\n                visible: 'context-menu-visible', // Item visible\n                notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n                icon: 'context-menu-icon',\n                iconEdit: 'context-menu-icon-edit',\n                iconCut: 'context-menu-icon-cut',\n                iconCopy: 'context-menu-icon-copy',\n                iconPaste: 'context-menu-icon-paste',\n                iconDelete: 'context-menu-icon-delete',\n                iconAdd: 'context-menu-icon-add',\n                iconQuit: 'context-menu-icon-quit',\n                iconLoadingClass: 'context-menu-icon-loading'\n            },\n\n            // determine position to show menu at\n            determinePosition: function ($menu) {\n                // position to the lower middle of the trigger element\n                if ($.ui && $.ui.position) {\n                    // .position() is provided as a jQuery UI utility\n                    // (...and it won't work on hidden elements)\n                    $menu.css('display', 'block').position({\n                        my: 'center top',\n                        at: 'center bottom',\n                        of: this,\n                        offset: '0 5',\n                        collision: 'fit'\n                    }).css('display', 'none');\n                } else {\n                    // determine contextMenu position\n                    var offset = this.offset();\n                    offset.top += this.outerHeight();\n                    offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n                    $menu.css(offset);\n                }\n            },\n            // position menu\n            position: function (opt, x, y) {\n                var offset;\n                // determine contextMenu position\n                if (!x && !y) {\n                    opt.determinePosition.call(this, opt.$menu);\n                    return;\n                } else if (x === 'maintain' && y === 'maintain') {\n                    // x and y must not be changed (after re-show on command click)\n                    offset = opt.$menu.position();\n                } else {\n                    // x and y are given (by mouse event)\n                    var offsetParentOffset = opt.$menu.offsetParent().offset();\n                    offset = {top: y - offsetParentOffset.top, left: x -offsetParentOffset.left};\n                }\n\n                // correct offset if viewport demands it\n                var bottom = $win.scrollTop() + $win.height(),\n                    right = $win.scrollLeft() + $win.width(),\n                    height = opt.$menu.outerHeight(),\n                    width = opt.$menu.outerWidth();\n\n                if (offset.top + height > bottom) {\n                    offset.top -= height;\n                }\n\n                if (offset.top < 0) {\n                    offset.top = 0;\n                }\n\n                if (offset.left + width > right) {\n                    offset.left -= width;\n                }\n\n                if (offset.left < 0) {\n                    offset.left = 0;\n                }\n\n                opt.$menu.css(offset);\n            },\n            // position the sub-menu\n            positionSubmenu: function ($menu) {\n                if (typeof $menu === 'undefined') {\n                    // When user hovers over item (which has sub items) handle.focusItem will call this.\n                    // but the submenu does not exist yet if opt.items is a promise. just return, will\n                    // call positionSubmenu after promise is completed.\n                    return;\n                }\n                if ($.ui && $.ui.position) {\n                    // .position() is provided as a jQuery UI utility\n                    // (...and it won't work on hidden elements)\n                    $menu.css('display', 'block').position({\n                        my: 'left top-5',\n                        at: 'right top',\n                        of: this,\n                        collision: 'flipfit fit'\n                    }).css('display', '');\n                } else {\n                    // determine contextMenu position\n                    var offset = {\n                        top: -9,\n                        left: this.outerWidth() - 5\n                    };\n                    $menu.css(offset);\n                }\n            },\n            // offset to add to zIndex\n            zIndex: 1,\n            // show hide animation settings\n            animation: {\n                duration: 50,\n                show: 'slideDown',\n                hide: 'slideUp'\n            },\n            // events\n            events: {\n                show: $.noop,\n                hide: $.noop,\n                activated: $.noop\n            },\n            // default callback\n            callback: null,\n            // list of contextMenu items\n            items: {}\n        },\n        // mouse position for hover activation\n        hoveract = {\n            timer: null,\n            pageX: null,\n            pageY: null\n        },\n        // determine zIndex\n        zindex = function ($t) {\n            var zin = 0,\n                $tt = $t;\n\n            while (true) {\n                zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n                $tt = $tt.parent();\n                if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                    break;\n                }\n            }\n            return zin;\n        },\n        // event handlers\n        handle = {\n            // abort anything\n            abortevent: function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            },\n            // contextmenu show dispatcher\n            contextmenu: function (e) {\n                var $this = $(this);\n\n                // disable actual context-menu if we are using the right mouse button as the trigger\n                if (e.data.trigger === 'right') {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                }\n\n                // abort native-triggered events unless we're triggering on right click\n                if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\n                    return;\n                }\n\n                // Let the current contextmenu decide if it should show or not based on its own trigger settings\n                if (typeof e.mouseButton !== 'undefined' && e.data) {\n                    if (!(e.data.trigger === 'left' && e.mouseButton === 0) && !(e.data.trigger === 'right' && e.mouseButton === 2)) {\n                        // Mouse click is not valid.\n                        return;\n                    }\n                }\n\n                // abort event if menu is visible for this trigger\n                if ($this.hasClass('context-menu-active')) {\n                    return;\n                }\n\n                if (!$this.hasClass('context-menu-disabled')) {\n                    // theoretically need to fire a show event at <menu>\n                    // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n                    // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n                    // e.data.$menu.trigger(evt);\n\n                    $currentTrigger = $this;\n                    if (e.data.build) {\n                        var built = e.data.build($currentTrigger, e);\n                        // abort if build() returned false\n                        if (built === false) {\n                            return;\n                        }\n\n                        // dynamically build menu on invocation\n                        e.data = $.extend(true, {}, defaults, e.data, built || {});\n\n                        // abort if there are no items to display\n                        if (!e.data.items || $.isEmptyObject(e.data.items)) {\n                            // Note: jQuery captures and ignores errors from event handlers\n                            if (window.console) {\n                                (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                            }\n\n                            throw new Error('No Items specified');\n                        }\n\n                        // backreference for custom command type creation\n                        e.data.$trigger = $currentTrigger;\n\n                        op.create(e.data);\n                    }\n                    var showMenu = false;\n                    for (var item in e.data.items) {\n                        if (e.data.items.hasOwnProperty(item)) {\n                            var visible;\n                            if ($.isFunction(e.data.items[item].visible)) {\n                                visible = e.data.items[item].visible.call($(e.currentTarget), item, e.data);\n                            } else if (typeof e.data.items[item] !== 'undefined' && e.data.items[item].visible) {\n                                visible = e.data.items[item].visible === true;\n                            } else {\n                                visible = true;\n                            }\n                            if (visible) {\n                                showMenu = true;\n                            }\n                        }\n                    }\n                    if (showMenu) {\n                        // show menu\n                        op.show.call($this, e.data, e.pageX, e.pageY);\n                    }\n                }\n            },\n            // contextMenu left-click trigger\n            click: function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                $(this).trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY}));\n            },\n            // contextMenu right-click trigger\n            mousedown: function (e) {\n                // register mouse down\n                var $this = $(this);\n\n                // hide any previous menus\n                if ($currentTrigger && $currentTrigger.length && !$currentTrigger.is($this)) {\n                    $currentTrigger.data('contextMenu').$menu.trigger('contextmenu:hide');\n                }\n\n                // activate on right click\n                if (e.button === 2) {\n                    $currentTrigger = $this.data('contextMenuActive', true);\n                }\n            },\n            // contextMenu right-click trigger\n            mouseup: function (e) {\n                // show menu\n                var $this = $(this);\n                if ($this.data('contextMenuActive') && $currentTrigger && $currentTrigger.length && $currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    $currentTrigger = $this;\n                    $this.trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY}));\n                }\n\n                $this.removeData('contextMenuActive');\n            },\n            // contextMenu hover trigger\n            mouseenter: function (e) {\n                var $this = $(this),\n                    $related = $(e.relatedTarget),\n                    $document = $(document);\n\n                // abort if we're coming from a menu\n                if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n                    return;\n                }\n\n                // abort if a menu is shown\n                if ($currentTrigger && $currentTrigger.length) {\n                    return;\n                }\n\n                hoveract.pageX = e.pageX;\n                hoveract.pageY = e.pageY;\n                hoveract.data = e.data;\n                $document.on('mousemove.contextMenuShow', handle.mousemove);\n                hoveract.timer = setTimeout(function () {\n                    hoveract.timer = null;\n                    $document.off('mousemove.contextMenuShow');\n                    $currentTrigger = $this;\n                    $this.trigger($.Event('contextmenu', {\n                        data: hoveract.data,\n                        pageX: hoveract.pageX,\n                        pageY: hoveract.pageY\n                    }));\n                }, e.data.delay);\n            },\n            // contextMenu hover trigger\n            mousemove: function (e) {\n                hoveract.pageX = e.pageX;\n                hoveract.pageY = e.pageY;\n            },\n            // contextMenu hover trigger\n            mouseleave: function (e) {\n                // abort if we're leaving for a menu\n                var $related = $(e.relatedTarget);\n                if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n                    return;\n                }\n\n                try {\n                    clearTimeout(hoveract.timer);\n                } catch (e) {\n                }\n\n                hoveract.timer = null;\n            },\n            // click on layer to hide contextMenu\n            layerClick: function (e) {\n                var $this = $(this),\n                    root = $this.data('contextMenuRoot'),\n                    button = e.button,\n                    x = e.pageX,\n                    y = e.pageY,\n                    fakeClick = x === undefined,\n                    target,\n                    offset;\n\n                e.preventDefault();\n\n                setTimeout(function () {\n                    // If the click is not real, things break: https://github.com/swisnl/jQuery-contextMenu/issues/132\n                    if(fakeClick){\n                        if (root !== null && typeof root !== 'undefined' && root.$menu !== null  && typeof root.$menu !== 'undefined') {\n                            root.$menu.trigger('contextmenu:hide');\n                        }\n                        return;\n                    }\n\n                    var $window;\n                    var triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n                    // find the element that would've been clicked, wasn't the layer in the way\n                    if (document.elementFromPoint && root.$layer) {\n                        root.$layer.hide();\n                        target = document.elementFromPoint(x - $win.scrollLeft(), y - $win.scrollTop());\n\n                        // also need to try and focus this element if we're in a contenteditable area,\n                        // as the layer will prevent the browser mouse action we want\n                        if (target.isContentEditable) {\n                            var range = document.createRange(),\n                                sel = window.getSelection();\n                            range.selectNode(target);\n                            range.collapse(true);\n                            sel.removeAllRanges();\n                            sel.addRange(range);\n                        }\n                        $(target).trigger(e);\n                        root.$layer.show();\n                    }\n                    \n                    if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                      root.$menu.trigger('contextmenu:hide');\n                      return;\n                    }\n                    \n                    if (root.reposition && triggerAction) {\n                        if (document.elementFromPoint) {\n                            if (root.$trigger.is(target)) {\n                                root.position.call(root.$trigger, root, x, y);\n                                return;\n                            }\n                        } else {\n                            offset = root.$trigger.offset();\n                            $window = $(window);\n                            // while this looks kinda awful, it's the best way to avoid\n                            // unnecessarily calculating any positions\n                            offset.top += $window.scrollTop();\n                            if (offset.top <= e.pageY) {\n                                offset.left += $window.scrollLeft();\n                                if (offset.left <= e.pageX) {\n                                    offset.bottom = offset.top + root.$trigger.outerHeight();\n                                    if (offset.bottom >= e.pageY) {\n                                        offset.right = offset.left + root.$trigger.outerWidth();\n                                        if (offset.right >= e.pageX) {\n                                            // reposition\n                                            root.position.call(root.$trigger, root, x, y);\n                                            return;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    if (target && triggerAction) {\n                        root.$trigger.one('contextmenu:hidden', function () {\n                            $(target).contextMenu({x: x, y: y, button: button});\n                        });\n                    }\n\n                    if (root !== null && typeof root !== 'undefined' && root.$menu !== null  && typeof root.$menu !== 'undefined') {\n                        root.$menu.trigger('contextmenu:hide');\n                    }\n                }, 50);\n            },\n            // key handled :hover\n            keyStop: function (e, opt) {\n                if (!opt.isInput) {\n                    e.preventDefault();\n                }\n\n                e.stopPropagation();\n            },\n            key: function (e) {\n\n                var opt = {};\n\n                // Only get the data from $currentTrigger if it exists\n                if ($currentTrigger) {\n                    opt = $currentTrigger.data('contextMenu') || {};\n                }\n                // If the trigger happen on a element that are above the contextmenu do this\n                if (typeof opt.zIndex === 'undefined') {\n                    opt.zIndex = 0;\n                }\n                var targetZIndex = 0;\n                var getZIndexOfTriggerTarget = function (target) {\n                    if (target.style.zIndex !== '') {\n                        targetZIndex = target.style.zIndex;\n                    } else {\n                        if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                            getZIndexOfTriggerTarget(target.offsetParent);\n                        }\n                        else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                            getZIndexOfTriggerTarget(target.parentElement);\n                        }\n                    }\n                };\n                getZIndexOfTriggerTarget(e.target);\n                // If targetZIndex is heigher then opt.zIndex dont progress any futher.\n                // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n                // and its above the contextmenu it wont steal keys events\n                if (opt.$menu && parseInt(targetZIndex,10) > parseInt(opt.$menu.css(\"zIndex\"),10)) {\n                    return;\n                }\n                switch (e.keyCode) {\n                    case 9:\n                    case 38: // up\n                        handle.keyStop(e, opt);\n                        // if keyCode is [38 (up)] or [9 (tab) with shift]\n                        if (opt.isInput) {\n                            if (e.keyCode === 9 && e.shiftKey) {\n                                e.preventDefault();\n                                if (opt.$selected) {\n                                    opt.$selected.find('input, textarea, select').blur();\n                                }\n                                if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                                    opt.$menu.trigger('prevcommand');\n                                }\n                                return;\n                            } else if (e.keyCode === 38 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                                // checkboxes don't capture this key\n                                e.preventDefault();\n                                return;\n                            }\n                        } else if (e.keyCode !== 9 || e.shiftKey) {\n                            if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                                opt.$menu.trigger('prevcommand');\n                            }\n                            return;\n                        }\n                        break;\n                    // omitting break;\n                    // case 9: // tab - reached through omitted break;\n                    case 40: // down\n                        handle.keyStop(e, opt);\n                        if (opt.isInput) {\n                            if (e.keyCode === 9) {\n                                e.preventDefault();\n                                if (opt.$selected) {\n                                    opt.$selected.find('input, textarea, select').blur();\n                                }\n                                if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                                    opt.$menu.trigger('nextcommand');\n                                }\n                                return;\n                            } else if (e.keyCode === 40 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                                // checkboxes don't capture this key\n                                e.preventDefault();\n                                return;\n                            }\n                        } else {\n                            if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                                opt.$menu.trigger('nextcommand');\n                            }\n                            return;\n                        }\n                        break;\n\n                    case 37: // left\n                        handle.keyStop(e, opt);\n                        if (opt.isInput || !opt.$selected || !opt.$selected.length) {\n                            break;\n                        }\n\n                        if (!opt.$selected.parent().hasClass('context-menu-root')) {\n                            var $parent = opt.$selected.parent().parent();\n                            opt.$selected.trigger('contextmenu:blur');\n                            opt.$selected = $parent;\n                            return;\n                        }\n                        break;\n\n                    case 39: // right\n                        handle.keyStop(e, opt);\n                        if (opt.isInput || !opt.$selected || !opt.$selected.length) {\n                            break;\n                        }\n\n                        var itemdata = opt.$selected.data('contextMenu') || {};\n                        if (itemdata.$menu && opt.$selected.hasClass('context-menu-submenu')) {\n                            opt.$selected = null;\n                            itemdata.$selected = null;\n                            itemdata.$menu.trigger('nextcommand');\n                            return;\n                        }\n                        break;\n\n                    case 35: // end\n                    case 36: // home\n                        if (opt.$selected && opt.$selected.find('input, textarea, select').length) {\n                            return;\n                        } else {\n                            (opt.$selected && opt.$selected.parent() || opt.$menu)\n                                .children(':not(.' + opt.classNames.disabled + ', .' + opt.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                                .trigger('contextmenu:focus');\n                            e.preventDefault();\n                            return;\n                        }\n                        break;\n\n                    case 13: // enter\n                        handle.keyStop(e, opt);\n                        if (opt.isInput) {\n                            if (opt.$selected && !opt.$selected.is('textarea, select')) {\n                                e.preventDefault();\n                                return;\n                            }\n                            break;\n                        }\n                        if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {\n                            opt.$selected.trigger('mouseup');\n                        }\n                        return;\n\n                    case 32: // space\n                    case 33: // page up\n                    case 34: // page down\n                        // prevent browser from scrolling down while menu is visible\n                        handle.keyStop(e, opt);\n                        return;\n\n                    case 27: // esc\n                        handle.keyStop(e, opt);\n                        if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                            opt.$menu.trigger('contextmenu:hide');\n                        }\n                        return;\n\n                    default: // 0-9, a-z\n                        var k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                        if (opt.accesskeys && opt.accesskeys[k]) {\n                            // according to the specs accesskeys must be invoked immediately\n                            opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup');\n                            return;\n                        }\n                        break;\n                }\n                // pass event to selected item,\n                // stop propagation to avoid endless recursion\n                e.stopPropagation();\n                if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {\n                    opt.$selected.trigger(e);\n                }\n            },\n            // select previous possible command in menu\n            prevItem: function (e) {\n                e.stopPropagation();\n                var opt = $(this).data('contextMenu') || {};\n                var root = $(this).data('contextMenuRoot') || {};\n\n                // obtain currently selected menu\n                if (opt.$selected) {\n                    var $s = opt.$selected;\n                    opt = opt.$selected.parent().data('contextMenu') || {};\n                    opt.$selected = $s;\n                }\n\n                var $children = opt.$menu.children(),\n                    $prev = !opt.$selected || !opt.$selected.prev().length ? $children.last() : opt.$selected.prev(),\n                    $round = $prev;\n\n                // skip disabled or hidden elements\n                while ($prev.hasClass(root.classNames.disabled) || $prev.hasClass(root.classNames.notSelectable) || $prev.is(':hidden')) {\n                    if ($prev.prev().length) {\n                        $prev = $prev.prev();\n                    } else {\n                        $prev = $children.last();\n                    }\n                    if ($prev.is($round)) {\n                        // break endless loop\n                        return;\n                    }\n                }\n\n                // leave current\n                if (opt.$selected) {\n                    handle.itemMouseleave.call(opt.$selected.get(0), e);\n                }\n\n                // activate next\n                handle.itemMouseenter.call($prev.get(0), e);\n\n                // focus input\n                var $input = $prev.find('input, textarea, select');\n                if ($input.length) {\n                    $input.focus();\n                }\n            },\n            // select next possible command in menu\n            nextItem: function (e) {\n                e.stopPropagation();\n                var opt = $(this).data('contextMenu') || {};\n                var root = $(this).data('contextMenuRoot') || {};\n\n                // obtain currently selected menu\n                if (opt.$selected) {\n                    var $s = opt.$selected;\n                    opt = opt.$selected.parent().data('contextMenu') || {};\n                    opt.$selected = $s;\n                }\n\n                var $children = opt.$menu.children(),\n                    $next = !opt.$selected || !opt.$selected.next().length ? $children.first() : opt.$selected.next(),\n                    $round = $next;\n\n                // skip disabled\n                while ($next.hasClass(root.classNames.disabled) || $next.hasClass(root.classNames.notSelectable) || $next.is(':hidden')) {\n                    if ($next.next().length) {\n                        $next = $next.next();\n                    } else {\n                        $next = $children.first();\n                    }\n                    if ($next.is($round)) {\n                        // break endless loop\n                        return;\n                    }\n                }\n\n                // leave current\n                if (opt.$selected) {\n                    handle.itemMouseleave.call(opt.$selected.get(0), e);\n                }\n\n                // activate next\n                handle.itemMouseenter.call($next.get(0), e);\n\n                // focus input\n                var $input = $next.find('input, textarea, select');\n                if ($input.length) {\n                    $input.focus();\n                }\n            },\n            // flag that we're inside an input so the key handler can act accordingly\n            focusInput: function () {\n                var $this = $(this).closest('.context-menu-item'),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                root.$selected = opt.$selected = $this;\n                root.isInput = opt.isInput = true;\n            },\n            // flag that we're inside an input so the key handler can act accordingly\n            blurInput: function () {\n                var $this = $(this).closest('.context-menu-item'),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                root.isInput = opt.isInput = false;\n            },\n            // :hover on menu\n            menuMouseenter: function () {\n                var root = $(this).data().contextMenuRoot;\n                root.hovering = true;\n            },\n            // :hover on menu\n            menuMouseleave: function (e) {\n                var root = $(this).data().contextMenuRoot;\n                if (root.$layer && root.$layer.is(e.relatedTarget)) {\n                    root.hovering = false;\n                }\n            },\n            // :hover done manually so key handling is possible\n            itemMouseenter: function (e) {\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                root.hovering = true;\n\n                // abort if we're re-entering\n                if (e && root.$layer && root.$layer.is(e.relatedTarget)) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                }\n\n                // make sure only one item is selected\n                (opt.$menu ? opt : root).$menu\n                    .children('.' + root.classNames.hover).trigger('contextmenu:blur')\n                    .children('.hover').trigger('contextmenu:blur');\n\n                if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {\n                    opt.$selected = null;\n                    return;\n                }\n\n\n                $this.trigger('contextmenu:focus');\n            },\n            // :hover done manually so key handling is possible\n            itemMouseleave: function (e) {\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                if (root !== opt && root.$layer && root.$layer.is(e.relatedTarget)) {\n                    if (typeof root.$selected !== 'undefined' && root.$selected !== null) {\n                        root.$selected.trigger('contextmenu:blur');\n                    }\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    root.$selected = opt.$selected = opt.$node;\n                    return;\n                }\n\n                if(opt && opt.$menu && opt.$menu.hasClass('context-menu-visible')){\n                    return;\n                }\n\n                $this.trigger('contextmenu:blur');\n            },\n            // contextMenu item click\n            itemClick: function (e) {\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot,\n                    key = data.contextMenuKey,\n                    callback;\n\n                // abort if the key is unknown or disabled or is a menu\n                if (!opt.items[key] || $this.is('.' + root.classNames.disabled + ', .context-menu-separator, .' + root.classNames.notSelectable) || ($this.is('.context-menu-submenu') && root.selectableSubMenu === false )) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopImmediatePropagation();\n\n                if ($.isFunction(opt.callbacks[key]) && Object.prototype.hasOwnProperty.call(opt.callbacks, key)) {\n                    // item-specific callback\n                    callback = opt.callbacks[key];\n                } else if ($.isFunction(root.callback)) {\n                    // default callback\n                    callback = root.callback;\n                } else {\n                    // no callback, no action\n                    return;\n                }\n\n                // hide menu if callback doesn't stop that\n                if (callback.call(root.$trigger, key, root, e) !== false) {\n                    root.$menu.trigger('contextmenu:hide');\n                } else if (root.$menu.parent().length) {\n                    op.update.call(root.$trigger, root);\n                }\n            },\n            // ignore click events on input elements\n            inputClick: function (e) {\n                e.stopImmediatePropagation();\n            },\n            // hide <menu>\n            hideMenu: function (e, data) {\n                var root = $(this).data('contextMenuRoot');\n                op.hide.call(root.$trigger, root, data && data.force);\n            },\n            // focus <command>\n            focusItem: function (e) {\n                e.stopPropagation();\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {\n                    return;\n                }\n\n                $this\n                    .addClass([root.classNames.hover, root.classNames.visible].join(' '))\n                    // select other items and included items\n                    .parent().find('.context-menu-item').not($this)\n                    .removeClass(root.classNames.visible)\n                    .filter('.' + root.classNames.hover)\n                    .trigger('contextmenu:blur');\n\n                // remember selected\n                opt.$selected = root.$selected = $this;\n\n\n                if(opt && opt.$node && opt.$node.hasClass('context-menu-submenu')){\n                    opt.$node.addClass(root.classNames.hover);\n                }\n\n                // position sub-menu - do after show so dumb $.ui.position can keep up\n                if (opt.$node) {\n                    root.positionSubmenu.call(opt.$node, opt.$menu);\n                }\n            },\n            // blur <command>\n            blurItem: function (e) {\n                e.stopPropagation();\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                if (opt.autoHide) { // for tablets and touch screens this needs to remain\n                    $this.removeClass(root.classNames.visible);\n                }\n                $this.removeClass(root.classNames.hover);\n                opt.$selected = null;\n            }\n        },\n        // operations\n        op = {\n            show: function (opt, x, y) {\n                var $trigger = $(this),\n                    css = {};\n\n                // hide any open menus\n                $('#context-menu-layer').trigger('mousedown');\n\n                // backreference for callbacks\n                opt.$trigger = $trigger;\n\n                // show event\n                if (opt.events.show.call($trigger, opt) === false) {\n                    $currentTrigger = null;\n                    return;\n                }\n\n                // create or update context menu\n                op.update.call($trigger, opt);\n\n                // position menu\n                opt.position.call($trigger, opt, x, y);\n\n                // make sure we're in front\n                if (opt.zIndex) {\n                    var additionalZValue = opt.zIndex;\n                    // If opt.zIndex is a function, call the function to get the right zIndex.\n                    if (typeof opt.zIndex === 'function') {\n                        additionalZValue = opt.zIndex.call($trigger, opt);\n                    }\n                    css.zIndex = zindex($trigger) + additionalZValue;\n                }\n\n                // add layer\n                op.layer.call(opt.$menu, opt, css.zIndex);\n\n                // adjust sub-menu zIndexes\n                opt.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n                // position and show context menu\n                opt.$menu.css(css)[opt.animation.show](opt.animation.duration, function () {\n                    $trigger.trigger('contextmenu:visible');\n                    \n                    op.activated(opt);\n                    opt.events.activated(opt);\n                });\n                // make options available and set state\n                $trigger\n                    .data('contextMenu', opt)\n                    .addClass('context-menu-active');\n\n                // register key handler\n                $(document).off('keydown.contextMenu').on('keydown.contextMenu', handle.key);\n                // register autoHide handler\n                if (opt.autoHide) {\n                    // mouse position handler\n                    $(document).on('mousemove.contextMenuAutoHide', function (e) {\n                        // need to capture the offset on mousemove,\n                        // since the page might've been scrolled since activation\n                        var pos = $trigger.offset();\n                        pos.right = pos.left + $trigger.outerWidth();\n                        pos.bottom = pos.top + $trigger.outerHeight();\n\n                        if (opt.$layer && !opt.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                            /* Additional hover check after short time, you might just miss the edge of the menu */\n                            setTimeout(function () {\n                                if (!opt.hovering && opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                                    opt.$menu.trigger('contextmenu:hide');\n                                }\n                            }, 50);\n                        }\n                    });\n                }\n            },\n            hide: function (opt, force) {\n                var $trigger = $(this);\n                if (!opt) {\n                    opt = $trigger.data('contextMenu') || {};\n                }\n\n                // hide event\n                if (!force && opt.events && opt.events.hide.call($trigger, opt) === false) {\n                    return;\n                }\n\n                // remove options and revert state\n                $trigger\n                    .removeData('contextMenu')\n                    .removeClass('context-menu-active');\n\n                if (opt.$layer) {\n                    // keep layer for a bit so the contextmenu event can be aborted properly by opera\n                    setTimeout((function ($layer) {\n                        return function () {\n                            $layer.remove();\n                        };\n                    })(opt.$layer), 10);\n\n                    try {\n                        delete opt.$layer;\n                    } catch (e) {\n                        opt.$layer = null;\n                    }\n                }\n\n                // remove handle\n                $currentTrigger = null;\n                // remove selected\n                opt.$menu.find('.' + opt.classNames.hover).trigger('contextmenu:blur');\n                opt.$selected = null;\n                // collapse all submenus\n                opt.$menu.find('.' + opt.classNames.visible).removeClass(opt.classNames.visible);\n                // unregister key and mouse handlers\n                // $(document).off('.contextMenuAutoHide keydown.contextMenu'); // http://bugs.jquery.com/ticket/10705\n                $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\n                // hide menu\n                if (opt.$menu) {\n                    opt.$menu[opt.animation.hide](opt.animation.duration, function () {\n                        // tear down dynamically built menu after animation is completed.\n                        if (opt.build) {\n                            opt.$menu.remove();\n                            $.each(opt, function (key) {\n                                switch (key) {\n                                    case 'ns':\n                                    case 'selector':\n                                    case 'build':\n                                    case 'trigger':\n                                        return true;\n\n                                    default:\n                                        opt[key] = undefined;\n                                        try {\n                                            delete opt[key];\n                                        } catch (e) {\n                                        }\n                                        return true;\n                                }\n                            });\n                        }\n\n                        setTimeout(function () {\n                            $trigger.trigger('contextmenu:hidden');\n                        }, 10);\n                    });\n                }\n            },\n            create: function (opt, root) {\n                if (typeof root === 'undefined') {\n                    root = opt;\n                }\n\n                // create contextMenu\n                opt.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(opt.className || '').data({\n                    'contextMenu': opt,\n                    'contextMenuRoot': root\n                });\n\n                $.each(['callbacks', 'commands', 'inputs'], function (i, k) {\n                    opt[k] = {};\n                    if (!root[k]) {\n                        root[k] = {};\n                    }\n                });\n\n                if (!root.accesskeys) {\n                    root.accesskeys = {};\n                }\n\n                function createNameNode(item) {\n                    var $name = $('<span></span>');\n                    if (item._accesskey) {\n                        if (item._beforeAccesskey) {\n                            $name.append(document.createTextNode(item._beforeAccesskey));\n                        }\n                        $('<span></span>')\n                            .addClass('context-menu-accesskey')\n                            .text(item._accesskey)\n                            .appendTo($name);\n                        if (item._afterAccesskey) {\n                            $name.append(document.createTextNode(item._afterAccesskey));\n                        }\n                    } else {\n                        if (item.isHtmlName) {\n                            // restrict use with access keys\n                            if (typeof item.accesskey !== 'undefined') {\n                                throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                            }\n                            $name.html(item.name);\n                        } else {\n                            $name.text(item.name);\n                        }\n                    }\n                    return $name;\n                }\n\n                // create contextMenu items\n                $.each(opt.items, function (key, item) {\n                    var $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || ''),\n                        $label = null,\n                        $input = null;\n\n                    // iOS needs to see a click-event bound to an element to actually\n                    // have the TouchEvents infrastructure trigger the click event\n                    $t.on('click', $.noop);\n\n                    // Make old school string seperator a real item so checks wont be\n                    // akward later.\n                    // And normalize 'cm_separator' into 'cm_seperator'.\n                    if (typeof item === 'string' || item.type === 'cm_separator') {\n                        item = {type: 'cm_seperator'};\n                    }\n\n                    item.$node = $t.data({\n                        'contextMenu': opt,\n                        'contextMenuRoot': root,\n                        'contextMenuKey': key\n                    });\n\n                    // register accesskey\n                    // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n                    if (typeof item.accesskey !== 'undefined') {\n                        var aks = splitAccesskey(item.accesskey);\n                        for (var i = 0, ak; ak = aks[i]; i++) {\n                            if (!root.accesskeys[ak]) {\n                                root.accesskeys[ak] = item;\n                                var matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                                if (matched) {\n                                    item._beforeAccesskey = matched[1];\n                                    item._accesskey = matched[2];\n                                    item._afterAccesskey = matched[3];\n                                }\n                                break;\n                            }\n                        }\n                    }\n\n                    if (item.type && types[item.type]) {\n                        // run custom type handler\n                        types[item.type].call($t, item, opt, root);\n                        // register commands\n                        $.each([opt, root], function (i, k) {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the root. This so it\n                            // doesn't overwrite callbacks of root elements if the name is the same.\n                            if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof opt.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                    } else {\n                        // add label for input\n                        if (item.type === 'cm_seperator') {\n                            $t.addClass('context-menu-separator ' + root.classNames.notSelectable);\n                        } else if (item.type === 'html') {\n                            $t.addClass('context-menu-html ' + root.classNames.notSelectable);\n                        } else if (item.type === 'sub') {\n                            // We don't want to execute the next else-if if it is a sub.\n                        } else if (item.type) {\n                            $label = $('<label></label>').appendTo($t);\n                            createNameNode(item).appendTo($label);\n\n                            $t.addClass('context-menu-input');\n                            opt.hasTypes = true;\n                            $.each([opt, root], function (i, k) {\n                                k.commands[key] = item;\n                                k.inputs[key] = item;\n                            });\n                        } else if (item.items) {\n                            item.type = 'sub';\n                        }\n\n                        switch (item.type) {\n                            case 'cm_seperator':\n                                break;\n\n                            case 'text':\n                                $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                                    .attr('name', 'context-menu-input-' + key)\n                                    .val(item.value || '')\n                                    .appendTo($label);\n                                break;\n\n                            case 'textarea':\n                                $input = $('<textarea name=\"\"></textarea>')\n                                    .attr('name', 'context-menu-input-' + key)\n                                    .val(item.value || '')\n                                    .appendTo($label);\n\n                                if (item.height) {\n                                    $input.height(item.height);\n                                }\n                                break;\n\n                            case 'checkbox':\n                                $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                                    .attr('name', 'context-menu-input-' + key)\n                                    .val(item.value || '')\n                                    .prop('checked', !!item.selected)\n                                    .prependTo($label);\n                                break;\n\n                            case 'radio':\n                                $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                                    .attr('name', 'context-menu-input-' + item.radio)\n                                    .val(item.value || '')\n                                    .prop('checked', !!item.selected)\n                                    .prependTo($label);\n                                break;\n\n                            case 'select':\n                                $input = $('<select name=\"\"></select>')\n                                    .attr('name', 'context-menu-input-' + key)\n                                    .appendTo($label);\n                                if (item.options) {\n                                    $.each(item.options, function (value, text) {\n                                        $('<option></option>').val(value).text(text).appendTo($input);\n                                    });\n                                    $input.val(item.selected);\n                                }\n                                break;\n\n                            case 'sub':\n                                createNameNode(item).appendTo($t);\n                                item.appendTo = item.$node;\n                                $t.data('contextMenu', item).addClass('context-menu-submenu');\n                                item.callback = null;\n\n                                // If item contains items, and this is a promise, we should create it later\n                                // check if subitems is of type promise. If it is a promise we need to create\n                                // it later, after promise has been resolved.\n                                if ('function' === typeof item.items.then) {\n                                    // probably a promise, process it, when completed it will create the sub menu's.\n                                    op.processPromises(item, root, item.items);\n                                } else {\n                                    // normal submenu.\n                                    op.create(item, root);\n                                }\n                                break;\n\n                            case 'html':\n                                $(item.html).appendTo($t);\n                                break;\n\n                            default:\n                                $.each([opt, root], function (i, k) {\n                                    k.commands[key] = item;\n                                    // Overwrite only if undefined or the item is appended to the root. This so it\n                                    // doesn't overwrite callbacks of root elements if the name is the same.\n                                    if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof opt.type === 'undefined')) {\n                                        k.callbacks[key] = item.callback;\n                                    }\n                                });\n                                createNameNode(item).appendTo($t);\n                                break;\n                        }\n\n                        // disable key listener in <input>\n                        if (item.type && item.type !== 'sub' && item.type !== 'html' && item.type !== 'cm_seperator') {\n                            $input\n                                .on('focus', handle.focusInput)\n                                .on('blur', handle.blurInput);\n\n                            if (item.events) {\n                                $input.on(item.events, opt);\n                            }\n                        }\n\n                        // add icons\n                        if (item.icon) {\n                            if ($.isFunction(item.icon)) {\n                                item._icon = item.icon.call(this, this, $t, key, item);\n                            } else {\n                                if (typeof(item.icon) === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                                    // to enable font awesome\n                                    item._icon = root.classNames.icon + ' ' + root.classNames.icon + '--fa fa ' + item.icon;\n                                } else {\n                                    item._icon = root.classNames.icon + ' ' + root.classNames.icon + '-' + item.icon;\n                                }\n                            }\n                            $t.addClass(item._icon);\n                        }\n                    }\n\n                    // cache contained elements\n                    item.$input = $input;\n                    item.$label = $label;\n\n                    // attach item to menu\n                    $t.appendTo(opt.$menu);\n\n                    // Disable text selection\n                    if (!opt.hasTypes && $.support.eventSelectstart) {\n                        // browsers support user-select: none,\n                        // IE has a special event for text-selection\n                        // browsers supporting neither will not be preventing text-selection\n                        $t.on('selectstart.disableTextSelect', handle.abortevent);\n                    }\n                });\n                // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n                if (!opt.$node) {\n                    opt.$menu.css('display', 'none').addClass('context-menu-root');\n                }\n                opt.$menu.appendTo(opt.appendTo || document.body);\n            },\n            resize: function ($menu, nested) {\n                var domMenu;\n                // determine widths of submenus, as CSS won't grow them automatically\n                // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n                // kinda sucks hard...\n\n                // determine width of absolutely positioned element\n                $menu.css({position: 'absolute', display: 'block'});\n                // don't apply yet, because that would break nested elements' widths\n                $menu.data('width',\n                    (domMenu = $menu.get(0)).getBoundingClientRect ?\n                        Math.ceil(domMenu.getBoundingClientRect().width) :\n                        $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n                // reset styles so they allow nested elements to grow/shrink naturally\n                $menu.css({\n                    position: 'static',\n                    minWidth: '0px',\n                    maxWidth: '100000px'\n                });\n                // identify width of nested menus\n                $menu.find('> li > ul').each(function () {\n                    op.resize($(this), true);\n                });\n                // reset and apply changes in the end because nested\n                // elements' widths wouldn't be calculatable otherwise\n                if (!nested) {\n                    $menu.find('ul').addBack().css({\n                        position: '',\n                        display: '',\n                        minWidth: '',\n                        maxWidth: ''\n                    }).outerWidth(function () {\n                        return $(this).data('width');\n                    });\n                }\n            },\n            update: function (opt, root) {\n                var $trigger = this;\n                if (typeof root === 'undefined') {\n                    root = opt;\n                    op.resize(opt.$menu);\n                }\n                // re-check disabled for each item\n                opt.$menu.children().each(function () {\n                    var $item = $(this),\n                        key = $item.data('contextMenuKey'),\n                        item = opt.items[key],\n                        disabled = ($.isFunction(item.disabled) && item.disabled.call($trigger, key, root)) || item.disabled === true,\n                        visible;\n                    if ($.isFunction(item.visible)) {\n                        visible = item.visible.call($trigger, key, root);\n                    } else if (typeof item.visible !== 'undefined') {\n                        visible = item.visible === true;\n                    } else {\n                        visible = true;\n                    }\n                    $item[visible ? 'show' : 'hide']();\n\n                    // dis- / enable item\n                    $item[disabled ? 'addClass' : 'removeClass'](root.classNames.disabled);\n\n                    if ($.isFunction(item.icon)) {\n                        $item.removeClass(item._icon);\n                        item._icon = item.icon.call(this, $trigger, $item, key, item);\n                        $item.addClass(item._icon);\n                    }\n\n                    if (item.type) {\n                        // dis- / enable input elements\n                        $item.find('input, select, textarea').prop('disabled', disabled);\n\n                        // update input states\n                        switch (item.type) {\n                            case 'text':\n                            case 'textarea':\n                                item.$input.val(item.value || '');\n                                break;\n\n                            case 'checkbox':\n                            case 'radio':\n                                item.$input.val(item.value || '').prop('checked', !!item.selected);\n                                break;\n\n                            case 'select':\n                                item.$input.val((item.selected === 0 ? \"0\" : item.selected) || '');\n                                break;\n                        }\n                    }\n\n                    if (item.$menu) {\n                        // update sub-menu\n                        op.update.call($trigger, item, root);\n                    }\n                });\n            },\n            layer: function (opt, zIndex) {\n                // add transparent layer for click area\n                // filter and background for Internet Explorer, Issue #23\n                var $layer = opt.$layer = $('<div id=\"context-menu-layer\"></div>')\n                    .css({\n                        height: $win.height(),\n                        width: $win.width(),\n                        display: 'block',\n                        position: 'fixed',\n                        'z-index': zIndex,\n                        top: 0,\n                        left: 0,\n                        opacity: 0,\n                        filter: 'alpha(opacity=0)',\n                        'background-color': '#000'\n                    })\n                    .data('contextMenuRoot', opt)\n                    .insertBefore(this)\n                    .on('contextmenu', handle.abortevent)\n                    .on('mousedown', handle.layerClick);\n\n                // IE6 doesn't know position:fixed;\n                if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n                    $layer.css({\n                        'position': 'absolute',\n                        'height': $(document).height()\n                    });\n                }\n\n                return $layer;\n            },\n            processPromises: function (opt, root, promise) {\n                // Start\n                opt.$node.addClass(root.classNames.iconLoadingClass);\n\n                function completedPromise(opt, root, items) {\n                    // Completed promise (dev called promise.resolve). We now have a list of items which can\n                    // be used to create the rest of the context menu.\n                    if (typeof items === 'undefined') {\n                        // Null result, dev should have checked\n                        errorPromise(undefined);//own error object\n                    }\n                    finishPromiseProcess(opt, root, items);\n                }\n\n                function errorPromise(opt, root, errorItem) {\n                    // User called promise.reject() with an error item, if not, provide own error item.\n                    if (typeof errorItem === 'undefined') {\n                        errorItem = {\n                            \"error\": {\n                                name: \"No items and no error item\",\n                                icon: \"context-menu-icon context-menu-icon-quit\"\n                            }\n                        };\n                        if (window.console) {\n                            (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                        }\n                    } else if (typeof errorItem === 'string') {\n                        errorItem = {\"error\": {name: errorItem}};\n                    }\n                    finishPromiseProcess(opt, root, errorItem);\n                }\n\n                function finishPromiseProcess(opt, root, items) {\n                    if (typeof root.$menu === 'undefined' || !root.$menu.is(':visible')) {\n                        return;\n                    }\n                    opt.$node.removeClass(root.classNames.iconLoadingClass);\n                    opt.items = items;\n                    op.create(opt, root, true); // Create submenu\n                    op.update(opt, root); // Correctly update position if user is already hovered over menu item\n                    root.positionSubmenu.call(opt.$node, opt.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n                }\n\n                // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the opt\n                // and root to avoid scope problems\n                promise.then(completedPromise.bind(this, opt, root), errorPromise.bind(this, opt, root));\n            },\n            // operation that will run after contextMenu showed on screen\n            activated: function(opt){\n                var $menu = opt.$menu;\n                var $menuOffset = $menu.offset();\n                var winHeight = $(window).height();\n                var winScrollTop = $(window).scrollTop();\n                var menuHeight = $menu.height();\n                if(menuHeight > winHeight){\n                    $menu.css({\n                        'height' : winHeight + 'px',\n                        'overflow-x': 'hidden',\n                        'overflow-y': 'auto',\n                        'top': winScrollTop + 'px'\n                    });\n                } else if(($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)){\n                    $menu.css({\n                        'top': '0px'\n                    });\n                } \n            }\n        };\n\n    // split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n    function splitAccesskey(val) {\n        var t = val.split(/\\s+/);\n        var keys = [];\n\n        for (var i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n\n// handle contextMenu triggers\n    $.fn.contextMenu = function (operation) {\n        var $t = this, $o = operation;\n        if (this.length > 0) {  // this is not a build on demand menu\n            if (typeof operation === 'undefined') {\n                this.first().trigger('contextmenu');\n            } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n                this.first().trigger($.Event('contextmenu', {\n                    pageX: operation.x,\n                    pageY: operation.y,\n                    mouseButton: operation.button\n                }));\n            } else if (operation === 'hide') {\n                var $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n                if ($menu) {\n                    $menu.trigger('contextmenu:hide');\n                }\n            } else if (operation === 'destroy') {\n                $.contextMenu('destroy', {context: this});\n            } else if ($.isPlainObject(operation)) {\n                operation.context = this;\n                $.contextMenu('create', operation);\n            } else if (operation) {\n                this.removeClass('context-menu-disabled');\n            } else if (!operation) {\n                this.addClass('context-menu-disabled');\n            }\n        } else {\n            $.each(menus, function () {\n                if (this.selector === $t.selector) {\n                    $o.data = this;\n\n                    $.extend($o.data, {trigger: 'demand'});\n                }\n            });\n\n            handle.contextmenu.call($o.target, $o);\n        }\n\n        return this;\n    };\n\n    // manage contextMenu instances\n    $.contextMenu = function (operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n\n        // merge with default options\n        var o = $.extend(true, {}, defaults, options || {});\n        var $document = $(document);\n        var $context = $document;\n        var _hasContext = false;\n\n        if (!o.context || !o.context.length) {\n            o.context = document;\n        } else {\n            // you never know what they throw at you...\n            $context = $(o.context).first();\n            o.context = $context.get(0);\n            _hasContext = !$(o.context).is(document);\n        }\n\n        switch (operation) {\n\n            case 'update':\n                // Updates visibility and such\n                if(_hasContext){\n                    op.update($context);\n                } else {\n                    for(var menu in menus){\n                        if(menus.hasOwnProperty(menu)){\n                            op.update(menus[menu]);\n                        }\n                    }\n                }\n                break;\n\n            case 'create':\n                // no selector no joy\n                if (!o.selector) {\n                    throw new Error('No selector specified');\n                }\n                // make sure internal classes are not bound to\n                if (o.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n                    throw new Error('Cannot bind to selector \"' + o.selector + '\" as it contains a reserved className');\n                }\n                if (!o.build && (!o.items || $.isEmptyObject(o.items))) {\n                    throw new Error('No Items specified');\n                }\n                counter++;\n                o.ns = '.contextMenu' + counter;\n                if (!_hasContext) {\n                    namespaces[o.selector] = o.ns;\n                }\n                menus[o.ns] = o;\n\n                // default to right click\n                if (!o.trigger) {\n                    o.trigger = 'right';\n                }\n\n                if (!initialized) {\n                    var itemClick = o.itemClickEvent === 'click' ? 'click.contextMenu' : 'mouseup.contextMenu';\n                    var contextMenuItemObj = {\n                        // 'mouseup.contextMenu': handle.itemClick,\n                        // 'click.contextMenu': handle.itemClick,\n                        'contextmenu:focus.contextMenu': handle.focusItem,\n                        'contextmenu:blur.contextMenu': handle.blurItem,\n                        'contextmenu.contextMenu': handle.abortevent,\n                        'mouseenter.contextMenu': handle.itemMouseenter,\n                        'mouseleave.contextMenu': handle.itemMouseleave\n                    };\n                    contextMenuItemObj[itemClick] = handle.itemClick;\n                    // make sure item click is registered first\n                    $document\n                        .on({\n                            'contextmenu:hide.contextMenu': handle.hideMenu,\n                            'prevcommand.contextMenu': handle.prevItem,\n                            'nextcommand.contextMenu': handle.nextItem,\n                            'contextmenu.contextMenu': handle.abortevent,\n                            'mouseenter.contextMenu': handle.menuMouseenter,\n                            'mouseleave.contextMenu': handle.menuMouseleave\n                        }, '.context-menu-list')\n                        .on('mouseup.contextMenu', '.context-menu-input', handle.inputClick)\n                        .on(contextMenuItemObj, '.context-menu-item');\n\n                    initialized = true;\n                }\n\n                // engage native contextmenu event\n                $context\n                    .on('contextmenu' + o.ns, o.selector, o, handle.contextmenu);\n\n                if (_hasContext) {\n                    // add remove hook, just in case\n                    $context.on('remove' + o.ns, function () {\n                        $(this).contextMenu('destroy');\n                    });\n                }\n\n                switch (o.trigger) {\n                    case 'hover':\n                        $context\n                            .on('mouseenter' + o.ns, o.selector, o, handle.mouseenter)\n                            .on('mouseleave' + o.ns, o.selector, o, handle.mouseleave);\n                        break;\n\n                    case 'left':\n                        $context.on('click' + o.ns, o.selector, o, handle.click);\n                        break;\n\t\t\t\t    case 'touchstart':\n                        $context.on('touchstart' + o.ns, o.selector, o, handle.click);\n                        break;\n                    /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, handle.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, handle.mouseup);\n                     break;\n                     */\n                }\n\n                // create menu\n                if (!o.build) {\n                    op.create(o);\n                }\n                break;\n\n            case 'destroy':\n                var $visibleMenu;\n                if (_hasContext) {\n                    // get proper options\n                    var context = o.context;\n                    $.each(menus, function (ns, o) {\n\n                        if (!o) {\n                            return true;\n                        }\n\n                        // Is this menu equest to the context called from\n                        if (!$(context).is(o.selector)) {\n                            return true;\n                        }\n\n                        $visibleMenu = $('.context-menu-list').filter(':visible');\n                        if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                            $visibleMenu.trigger('contextmenu:hide', {force: true});\n                        }\n\n                        try {\n                            if (menus[o.ns].$menu) {\n                                menus[o.ns].$menu.remove();\n                            }\n\n                            delete menus[o.ns];\n                        } catch (e) {\n                            menus[o.ns] = null;\n                        }\n\n                        $(o.context).off(o.ns);\n\n                        return true;\n                    });\n                } else if (!o.selector) {\n                    $document.off('.contextMenu .contextMenuAutoHide');\n                    $.each(menus, function (ns, o) {\n                        $(o.context).off(o.ns);\n                    });\n\n                    namespaces = {};\n                    menus = {};\n                    counter = 0;\n                    initialized = false;\n\n                    $('#context-menu-layer, .context-menu-list').remove();\n                } else if (namespaces[o.selector]) {\n                    $visibleMenu = $('.context-menu-list').filter(':visible');\n                    if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(o.selector)) {\n                        $visibleMenu.trigger('contextmenu:hide', {force: true});\n                    }\n\n                    try {\n                        if (menus[namespaces[o.selector]].$menu) {\n                            menus[namespaces[o.selector]].$menu.remove();\n                        }\n\n                        delete menus[namespaces[o.selector]];\n                    } catch (e) {\n                        menus[namespaces[o.selector]] = null;\n                    }\n\n                    $document.off(namespaces[o.selector]);\n                }\n                break;\n\n            case 'html5':\n                // if <command> and <menuitem> are not handled by the browser,\n                // or options was a bool true,\n                // initialize $.contextMenu for them\n                if ((!$.support.htmlCommand && !$.support.htmlMenuitem) || (typeof options === 'boolean' && options)) {\n                    $('menu[type=\"context\"]').each(function () {\n                        if (this.id) {\n                            $.contextMenu({\n                                selector: '[contextmenu=' + this.id + ']',\n                                items: $.contextMenu.fromMenu(this)\n                            });\n                        }\n                    }).css('display', 'none');\n                }\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    };\n\n// import values into <input> commands\n    $.contextMenu.setInputValues = function (opt, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(opt.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = data[key] ? true : false;\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    };\n\n// export values from <input> commands\n    $.contextMenu.getInputValues = function (opt, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(opt.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    };\n\n// find <label for=\"xyz\">\n    function inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n// convert <menu> to items object\n    function menuChildren(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        $children.each(function () {\n            var $node = $(this),\n                node = this,\n                nodeName = this.nodeName.toLowerCase(),\n                label,\n                item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = menuChildren(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                case 'a':\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n\n// convert html5 menu\n    $.contextMenu.fromMenu = function (element) {\n        var $this = $(element),\n            items = {};\n\n        menuChildren(items, $this.children());\n\n        return items;\n    };\n\n// make defaults accessible\n    $.contextMenu.defaults = defaults;\n    $.contextMenu.types = types;\n// export internal functions - undocumented, for hacking only!\n    $.contextMenu.handle = handle;\n    $.contextMenu.op = op;\n    $.contextMenu.menus = menus;\n});\n"]}